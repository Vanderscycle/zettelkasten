:PROPERTIES:
:ID:       cd0fcbf2-addf-48e6-8f15-44b95afd207d
:END:
#+title: cert - AWS Solution Architect

* Home
[[id:9d5c388a-88cd-423c-951b-5e512eae298b][Knowlege base]]

* Main reference
** Ackronym
Secure File Transfer Protocol (SFTP)
File Transfer Protocol Secure (FTPS)
File Transfer Protocol (FTP)
Set of rules governing how files are moved between server and client running in the application layer (lv7)
Applicability Statement 2 (AS2)
[[https://docs.aws.amazon.com/]]

* Futher learning
** OSI Model
[[https://en.wikipedia.org/wiki/OSI_model][OSI model - Wikipedia]]
** File Transfer Protocol
[[https://en.wikipedia.org/wiki/File_Transfer_Protocol][File Transfer Protocol - Wikipedia]]
* AWS Solution Architect

** TODO Knowledge [2/9]
*** TODO Networking
DEADLINE: <2024-10-16 Wed>
**** VPC

*** TODO Storage
DEADLINE: <2024-10-06 Sun>
**** EBS
**** EFS
**** S3

*** TODO Compute
DEADLINE: <2024-10-06 Sun>
**** EC2
**** BeanStalk
**** ECS
**** EKS

*** TODO Database
DEADLINE: <2024-10-06 Sun>
**** RDS
**** Dynamo
**** DocumentDB


*** TODO Application integration
DEADLINE: <2024-10-06 Sun>
**** Autoscaling
**** ELB
**** API Gateway
**** SQS
**** SNS
**** AWS MQ

*** DONE Data ML
CLOSED: [2024-09-30 Mon 12:59] DEADLINE: <2024-09-29 Sun>
- State "DONE"       from "TODO"       [2024-09-30 Mon 12:59]
**** kinesis (Data ingestion)
- video streams
Inputs (video's feed)
Output can be ~AWS Rekognition~, ~AWS S3~, ~AWS Sagemaker~
- data streams
Inputs any data stream
You can use Amazon Kinesis Data Streams to collect and process large streams of data records in real time.
Outputs can be ~AWS EC2~, ~AWS Lambda~, ~AWS EMR~, ~Kinesis Data Analytics~ (mostly other compute)
- data firehose
Inputs any data stream
Outputs can be ~AWS S3~, ~AWS Redhshift~. The main difference between that and ~data streams~ is that the outputs are data repositories
- data analytics (queries on the data before it hits storage)
**** Kafka
Amazon Managed Streaming for Apache Kafka (Amazon MSK) is a fully managed service that makes it easy for you to build and run applications that use Apache Kafka to process streaming data. High data ingestion, processing and delivery. Can be serverless.
~Apache Kafka~ is a distributed queue system decoupling producer and consumers. Queues are split into partitions which can be consumed using the partition key. Partitions hosted on a machine are called brokers
**** glue ETL
~AWS Glue~ is a serverless data integration service that makes it easy for analytics users to discover, prepare, move, and integrate data from multiple sources. You can use it for analytics, machine learning, and application development.
Defined datastore, create a crawler, populates glue data catalog
**** Elastic Map Reduce (EMR)
Amazon EMR is a managed cluster platform that simplifies running big data frameworks like Apache Hadoop and Apache Spark on AWS.  There is ~EMR Studio~ which allows for collaboration
~Apache Hadoop~ stores data accross several nodes in a cluster, process data accross multiple nodes, and then stores the results
~Apache Spark~ is a multi-language engine for executing data engineering, data science, and machine learning on single-node machines or clusters.
Can be hosted on ~EC2~, ~EKS~ or ~serverless~
**** glue Databrew
NoCode application of ~AWS Glue~
**** lake formation
AWS Lake Formation is a managed service that makes it easy to set up, secure, and manage your data lakes. Lake Formation helps you discover your data sources and then catalog, cleanse, and transform the data. Any source can be ~nosql~, ~s3~, ~redshift~, ~sql~
**** Athena
Amazon Athena is an interactive query service that makes it easy to analyze data in Amazon S3 using standard SQL. Athena is serverless, so there is no infrastructure to setup or manage, and you pay only for the queries you run.
**** Quicksight
Serverless data visuliaztion engine for interactive dashboarding pulling data from:
- s3
- athena
- RDS
- redshift
- aurora
- glue
**** Sagemaker
Build, train, and deploy machine learning models (image classification, object detection, regression, clustering/grouping, etc.) at scale.
[[https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html][Algos - Amazon SageMaker]]
Process:
- Data ingestion (~s3~ bucket)
- Data preparation and exploration
- Model training
- Model Evaluation + parameter tuning
- Model deployment
AWS process:
Pull data stored in ~s3~ using ~AWS Glue~ for ETL into sagemaker for:
- exploratory data analysis
- data cleaning
- building model
- deploy model
**** rekognition
AWS ML service that analyze and intrepret images and videos. Can be used for content moderation. Comes with a probability score
AWS process:
- user upload image from website to s3
- trigger's ~AWS lambda~
- AWS rekognition dumps metadata into ~AWS dynamoDB~
- low probability images can leverage ~AWS augmented AI~ for human to review machine learning predictions
**** Polly
Turn text into speech.
AWS process:
[[file:~/Documents/zettelkasten/data/image/cert/satty-20240925-14:02:00.png][polly]]
**** Lex
AWS chatbot (think alexa)
provides advanced deep learning functionalities of automatic speech recognition (ASR) for converting speech to text and natural language understanding (NLU) to recognize the intent of the text?
**** Comprehend
Natural language processing and text analysis.
***** Personally identifiable information e.g. credit card numb
**** forecast(NoCode)
Delivers forecasts on time series data (sales, website traffic, etc.)
**** Augmented AI
Integrate human reviewers to review AI's prediction.
Can be used for ~AWS Trasnlate~ for low confidence translation
~AWS rekognition~ for low confidence image label/sentiment/etc.

~AWS Mechnical Turk (MTurk)~ a virtual workforce that is paid per assignemtn to do this if you don't have the manpower to man A2I.
**** Fraud detector (NoCode)
Build, deploy, manage fraud detection model. Usefull for payment fraud detection.
[[file:~/Documents/zettelkasten/data/image/cert/fraudDectection.png][Fraud detection]]
**** transcribe
Speech to text. The opposite of ~AWS polly~
**** translate
AWS Google translate. Usefull for a single chatbot using multiple languages.
Can upload custom terminology to augment the translator.
**** textract
extract text from scanned forms.
Can extract:
- text
- forms
- tables
- signatures

*** DONE Migration/transfer
CLOSED: [2024-09-30 Mon 11:25] DEADLINE: <2024-09-29 Sun>
- State "DONE"       from "TODO"       [2024-09-30 Mon 11:25]
**** Intro
To migrate from on prem to AWS
- assess and create inventory
- categorize the items
- determine AWS cloud services
- plan migration
- execute the migration
**** migration hub
AWS Migration Hub (Migration Hub) provides a single place to discover your existing servers, plan migrations, and track the status of each application migration.
Connect migration tools to migration hub, migrate using the tools, and group servers as applications
***** Cost Optimization
****** During the migration
By using ~AWS Migration Hub~ to monitor the migration progress, the Solutions Architect can identify any delays or issues that might lead to extended migration timelines and, consequently, higher costs.
****** Assess on-premise infrastructure
Leverage ~AWS Apllication Discovery~ to identify over-provisioned resouces and recommend right-sizing before migration to AWS.
***** Security
****** Security of sensitive data
Implement ~AWS IAM~ roles + policies to control access to ~AWS Migration Hub~ and resources being migrated.
***** Reliability/Resilience
****** Critical continuity
By using ~AWS Migration Hub~ to plan and execute a sequential migration, starting with the most critical application tiers, the Solutions Architect can ensure that the most essential services remain available during the migration process.
**** application discovery service
~AWS Application Discovery Service~ helps you plan your migration to the AWS cloud by collecting usage and configuration data about your on-premises servers and databases
The ~AWS Application Discovery Agent~ (Discovery Agent) is software that you install on on-premises servers and VMs targeted for discovery and migration. Has to be installed on every server
~Application Discovery Service Agentless~ Collector(Agentless Collector) is a virtual appliance that you install in your on-premises VMware environment. Can only be used for =VMware environments=
The data gathered will be stored in an ~AWS S3 bucket~ and can be access by ~AWS Athena~ ~AWS migration hub~ ~AWS database migration services~
***** Performance Optimization
****** on-premises infra bottleneck
~AWS Application discovery~ can be used to identify underutilized resources and optimize for performance
****** post migration
implement ~AWS Global Accelerator~ to optimize network paths and improve game server performance post migration
***** Security Optimization
****** AWS Application services
store ~AWS Application discovery~ service gathered data into ~AWS S3~ with encryption enabled by ~AWS KMS~
**** application migration service
AWS Application Migration Service ~AWS MGN~ is a highly automated lift-and-shift (rehost) solution that simplifies, expedites, and reduces the cost of migrating applications to AWS.
Setup service, import inventory, replicates and syncs the data, test, and cutover
***** Security Optimization
****** Sensitive data
Use ~AWS KMS~ to encrypt data before migrating it with ~AWS MGN~. Ensures data is protect both in transit and at rest
**** database migration service
AWS Database Migration Service (AWS DMS) is a cloud service that makes it possible to migrate relational databases, data warehouses, NoSQL databases, and other types of data stores.
Allows for schema conversion e.g. mySql to postgresQL ~DMS schema conversion tool~
replication task (on prem source endpoint -> target AWS cloud endpoint) using DMS EC2 replication instance
- Full load (requires downtime)
- Full load + CDC
- CDC only
Allows for continuous data
***** Performance Optimization
****** Want best
Consider the use case ~AWS aurora~ for sql, ~AWS redshift~ for data warehousing, ~AWS DynamoDB~ for k/v + noSql
***** Reliability/Resilience
****** high resilience/fault tolerence during and after migration process
~AWS DMS~ with multi-az deployment for target db
***** Cost Optimization
****** startup unsure about AWS db costs
Use ~AWS Aurora serverless~ to automatically scale capacity and minimize costs > ~AWS RDS~ w/ reserved instance pricing model
**** Elastic disaster recovery
AWS Elastic Disaster Recovery (AWS DRS) minimizes downtime and data loss with fast, reliable recovery of on-premises and cloud-based applications =GCP= =Azure= using affordable storage, minimal compute, and point-in-time recovery. Can also be used on AWS fro region to region
Main issue without ~AWS EDR~ for on-prem services expensive (requires duplicate infra on stby), maintenance + skilled personel intensive.
Data is replicated from on-prems to AWS, using an ~AWS EC2~ and stores it on ~AWS EBS Volumes~
Allows for real time sync and point-in-time recovery, automated DR drills
***** Cost Optimization
****** network design strategy
AWS Direct Connect establishes a dedicated network connection between the company's infrastructure and AWS, which can significantly reduce data transfer costs during disaster recovery operations.
****** EBS
~AWS EBS~ with snapshot lifecycle policies to automate creation/deleition + costs
****** network design
~AWS Direct Connect~ to establish a dedicated network connection, reducing data transfer costs during disaster recovery operations
***** Performance Optimization
****** Minimal downtime and quick recovery (data storage)
Leverage ~AWS EDR~ and ~AWS FSx Lustre~
**** AWS Mainframe modernization
AWS Mainframe Modernization helps you modernize your mainframe applications to AWS managed runtime environments. It provides tools and resources to help you plan and implement migration and modernization.
You can =refactor= using ~AWS blu age~ or =replatform= with ~AWS Micro focus~
***** Cost Optimization
****** reduce costs by modernizing their legacy mainframe systems
Migrate the mainframe applications to a serverless architecture using ~AWS Lambda~
***** Reliability/Resilience
implement ~AWS mainframe modernization~ with multi-az deployment for migrated applications
**** Datasync (Mass data migration)
AWS DataSync is an online data transfer and discovery service that simplifies data migration and helps you quickly, easily, and securely transfer your file or object data to, from, and between AWS storage services.
An agent must be deployed on prem then ~AWS DataSync discovery~ provides recommendations
Can also be used to transfer large amount of data between AWS region
***** Cost Optimization
****** updates only
Implement incremental data transfer with ~AWS Datasync~ to reduce volume of data transferred
***** Performance Optimization
****** During transfer
~AWS DataSync~ ability to perform parallel transfers and multipart uploads to Amazon S3 is particularly beneficial for large files.
**** AWS Transfer Family ()
AWS Transfer Family is a secure transfer service that enables you to transfer files into and out of AWS storage services.
Can be internal and also connect cloudwatch to check for what files get moved
AWS Transfer Family functions somewhat like an external drive in the sense that it allows external clients, partners, or users to access files in Amazon S3 using familiar protocols like SFTP, FTPS, or FTP
***** Security Optimization
****** strict security protocol
~AWS transfer family~ with MDA for secure access control during file transfer
**** AWS Snow family
The AWS Snow Family is a service that helps customers who need to run operations in austere, non-data center environments, and in locations where there's no consistent network connectivity. Can handle petabytes depending on the snow.
Snowball edge
snowcone
snowball: CPU optimized 104vCPU, Storage optimized 210TB NVME/80TB HDD
snowmobile: exabyte scale data migration
***** Cost Optimization
****** Large scale data transfer (several petabytes)
Use ~AWS Snowmobile~ for one-time, large-scale data transfer

*** TODO Management/Governance
DEADLINE: <2024-09-29 Sun>
**** cloudformation
***** drift detection
AWS CloudFormation Drift Detection can be used to detect changes made to AWS resources outside the CloudFormation Templates. AWS CloudFormation Drift Detection only checks property values explicitly set by stack templates or by specifying template parameters.

***** Parameters
Allow users to input custom values when creating or updating a stack, making templates more flexible and reusable.
#+BEGIN_SRC yaml
Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues: [t2.micro, m1.small, m1.large]
    Description: Enter instance type (e.g., t2.micro)
#+END_SRC

***** Mappings
Define sets of static values that are mapped to keys, which can be referenced within the template.
#+BEGIN_SRC yaml
Mappings:
  RegionToAMI:
    us-east-1:
      AMI: "ami-0ff8a91507f77f867"
    us-west-2:
      AMI: "ami-0a8e758f5e873d1c1"
#+END_SRC

***** Conditions
Define conditional logic based on input parameters or other conditions, controlling when certain resources are created or updated within the stack.
#+BEGIN_SRC yaml
Conditions:
  CreateProdResources: !Equals [ !Ref EnvType, prod ]
#+END_SRC

***** Resources
Define the AWS resources that make up your stack.
#+BEGIN_SRC yaml
Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !If [CreateProdResources, "m1.small", !Ref InstanceTypeParameter]
      ImageId: !FindInMap [RegionToAMI, !Ref "AWS::Region", AMI]
#+END_SRC

***** Outputs
Define values that are returned by the stack once it's created or updated.
#+BEGIN_SRC yaml
Outputs:
  WebsiteURL:
    Description: URL of the website
    Value: !GetAtt WebsiteBucketWebsiteURL
#+END_SRC

***** cfn-init
helper script is used to retrieve and interpret resource metadata from the =AWS::CloudFormation::Init= key.

***** cfn-hup
helper script checks for any updates to the metadata. If there are any changes, it executes custom hooks.

***** cfn-signal
helper script can be used to signal CloudFormation to indicate if software or application is successfully updated on an Amazon EC2 instance.

***** cfn-get-metadata
helper script helps to retrieve metadata

**** Cloud Development Kit (CDK)
Because writting cloudformation template by hand is a pain.

The AWS Cloud Development Kit (AWS CDK) is an open-source software development framework for defining cloud infrastructure in code and provisioning it through AWS CloudFormation.

=cdk synth= synthetise the cloudformation templates
=cdk deploy= deploys the formations to AWS.
**** Cloudwatch
Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications you run on AWS in real time. You can use CloudWatch to collect and track metrics, which are variables you can measure for your resources and applications.

The CloudWatch home page automatically displays metrics about every AWS service you use. You can additionally create custom dashboards to display metrics about your custom applications, and display custom collections of metrics that you choose.

***** Metric
data such as latency, cpu load, etc. from your applications

***** Alarms
Alarms from metrics. Usefull for custom alarms which can be fed into ~AWS SNS~, then you can trigger a ~AWS Lambda~. Services like ~AWS autoscaling~ works out of the box.

***** Logs
All the logs generated from your application

***** Events
usefull for usage with ~AWS EventBridge~

**** x-ray
~AWS X-Ray~ is a service that collects data about requests that your application serves, and provides tools that you can use to view, filter, and gain insights into that data to identify issues and opportunities for optimization.

**** AWS Health Dashboard
General dashboard informing AWS customers about ongoing issues that AWS services/region are experiencing.

**** Prometheus
Amazon Managed Service for Prometheus is a serverless, Prometheus-compatible monitoring service for container metrics that makes it easier to securely monitor container environments at scale.

Open source solution for ~AWS Cloudwatch~. Collects your metrics

**** Grafana
Amazon Managed Grafana is a fully managed and secure data visualization service that you can use to instantly query, correlate, and visualize operational metrics, logs, and traces from multiple sources.

Open source solution for advanced analytics and visualization platform.

**** Trusted advisor
Trusted Advisor draws upon best practices learned from serving hundreds of thousands of AWS customers. Trusted Advisor inspects your AWS environment, and then makes recommendations when opportunities exist to save money, improve system availability and performance, or help close security gaps.

Mostly recommendations (but you have to pay for them)

**** Launch Wizard
AWS Launch Wizard helps you reduce the time that it takes to deploy well knows application (~AWS EKS~, ~SAP~, ~MS Active Dir~)and domain-controller solutions to the cloud.

**** Compute Optimizer
AWS Compute Optimizer recommends optimal AWS compute resources for your workloads.

~AWS EC2~, ~AWS EBS~, Fargate

**** AWS Organization
AWS Organizations helps you centrally manage and govern your environment as you grow and scale your AWS resources. Using Organizations, you can create accounts and allocate resources, group accounts to organize your workflows, apply policies for governance, and simplify billing by using a single payment method for all of your accounts.

You can only have one root and one management account. The later creates the policies, invites organizations, applying policies, etc.

***** Organization Units
An AWS Organization has the below hierarchy of Organizational Units (OUs): Root -> organization_OU (e.g. company a) -> Dev_OU
Project_OU is attached to an SCP that prevents users from deleting VPC Flow Logs. Dev_OU has an SCP that allows the action of "ec2: DeleteFlowLogs".

***** Service Control Policies (SCP)
Service control policies (SCPs) are a type of organization policy that you can use to manage permissions in your organization. SCPs offer central control over the maximum available permissions for the IAM users and IAM roles in your organization. Can apply to a specific acct, org, etc.

SCPs do not grant permissions to the IAM users and IAM roles in your organization. Only defines what you are allowed todo within that account. e.g. in the dev_OU you shouldn't be spinning large ec2.

**** Control tower
AWS Control Tower is a service that enables you to enforce and manage governance rules for security, operations, and compliance at scale across all your organizations and accounts in the AWS Cloud.

best thought as an AWS acct orchestrator

***** Landing Zone
A landing zone is a well-architected, multi-account environment that's based on security and compliance best practices. Creates two AWS Organizations organizational units (OUs): Security, and Sandbox (optional), contained within the organizational root structure. Creates or adds two shared accounts in the Security OU: the Log Archive account and the Audit account.

***** Controls/guardrails
 is a high-level rule that provides ongoing governance for your overall AWS environment. It's expressed in plain language. Three kinds of controls exist: preventive, detective (reports but doesn't stop you), and proactive(does not provision). It uses ~AWS Org SCP~
Detective controls detect specific events when they occur and log the action in CloudTrail.

***** Account Factory
An Account Factory is a configurable account template that helps to standardize the provisioning of new accounts with pre-approved account configurations.
**** System manager

**** service catalog
**** License Manager
**** Proton
AWS Proton creates and manages standardized infrastructure and deployment tooling for developers and their serverless and container-based applications.

I dare say that terraform modules does that

*** TODO Security
DEADLINE: <2024-09-29 Sun>
**** Macie
**** Security hub
**** KMS
**** WAF
**** shield

certificate manager
cert authority
kms
cloudformation and their milli params
VPN
autoscaling

** TODO Design [0/4]
DEADLINE: <2024-10-13 Sun>
*** TODO Security
*** TODO Reliability
*** TODO Performance
*** TODO Cost-optimization

** TODO Exams [/]
*** Old once a week
*** New 2 of them
DEADLINE: <2024-10-21 Mon>

* Misc
Ensures data is protect both in transit and at rest: use ~AWS KMS~
A healthcare company is planning to migrate its patient data management system to AWS using AWS Application Migration Service (AWS MGN). Given the sensitive nature of patient data, what should the Solutions Architect recommend to ensure data security during the migration process?
