:PROPERTIES:
:ID:       b97b4990-719f-4543-adcc-ae644195f63b
:END:
#+title: Emacs

* Topics
- [[id:b3c13621-8f46-48b8-86a3-a3e7c1f8846f][Emacs Packages]]
- [[id:a16d868e-65c2-4735-9104-822f3d1a7d22][Spacemacs]]
- [[id:338d95c5-0d38-4089-8e16-ff853ced3834][Styling]]
- [[id:6c7c13d8-f06b-4ff1-83b2-564ea572da83][Emacs Shell]]
- [[id:421fda6d-346b-4c72-b88d-8080922da724][Windows]]
- [[id:97649f9e-ee40-4226-ac4d-d51e1f7bbd3f][Macros]]

** Quick tips
- describe value in emacs =SPC h d v=
- Emacs freezes =C-g= to try to save it
- when a word is highlighted you can find all instances by typing =$=
- Access Dashboard
- To copy content in the command palete of minibuffer user =C-y=
-
** Tutorials
- [[https://www.youtube.com/watch?v=AyhPmypHDEw][Org roam]]
- [[https://www.youtube.com/watch?v=PNE-mgkZ6HM][Org mode tutorial]]
- [[https://www.youtube.com/watch?v=INTu30BHZGk][projectile + maggit]]
- [[id:341a7c39-5089-4d98-a390-2521fae514cc][Spacemacs abc]]


*** BACKLOG move the following to emacs packages
DEADLINE: <2024-08-30 Fri>

- project dired =c-x p D= (just like nnn)
Select files/folders using m, then press C to copy the files in the clipboard then use dired to move them

- dired helm find files to copy `C-y`
- create new dir `+`
- create new file `c-x c-f`
- Change the perms of a file/dir `M`

lsp if you are ever confused why the lsp isn't working check =lsp-describe-session= and if it shows nothing also check if you blocked the lsp =lsp-workspace-blocklist-remove=
** Find
*** within a page
*** within a project
Use =grep-find=
** Find and replace
*** Within a page
Use =replace-string=
*** Within a project
Use =projectile-replace=



* In search of new beginning to old problems
** What is the first iteration of my new flow?

** Org Mode Compact Guide
[[https://orgmode.org/guide/index.html#SEC_Contents][Top (Org Mode Compact Guide)]]
[[https://orgmode.org/manual/index.html#SEC_Contents][Top (The Org Manual)]]

*** CodeBlocks
=m i b= to select a example/src/etc block
#+NAME: recursion
#+begin_src python
def countdown(n):
  print(n)
  if n == 0:
      return             # Terminate recursion
  else:
      countdown(n - 1)   # Recursive call

countdown(5)
#+end_src

#+RESULTS: recursion
: None
*** Priority
There will come a time when there will be too many TODOS and you will need to prioritize them
=m p= default A(highest) - C lowest
*** Lists                                                       :power_user:
=m -= the current line or selection becomes a list with -
=m *= the current line or selection becomes headings

*** headings                                                     :power_user:
=m i s= super easy way to insert sub heading
=m i h= super easy way to insert headings (same level as current one)

*** Footnotes                                                 :documentation:
=m i f= while in visual mode you can highlight a word or phrase and add a footnote the same way an historic paper would

*** Properties and columns
Properties are keyâ€“value pairs that are withing their own drawers.
**** Efforts                                                       :planning:
you can set how much effort each task would take using ~org-set-effort~ which is binded to =m i e=
Columns are powerful but I will not be able to digest them just yet
*** TODOS

**** Scheduling/Deadlines                                          :planning:
They can have schedules and deadlines
=m d d= org-deadline
=m d s= org-schedule
Use =M-hjkl= to move cursor to the agenda
https://orgmode.org/manual/Deadlines-and-Scheduling.html

*** Agenda                                                         :planning:
=a o o= open the calendar menu including TODOS
=m [|]= add/remove ord file to agenda (includind TODOS)
=a o a= calendar-list, not sure what it does
*** Diary
**** TODO add keybindigns for diary entries and how they can be used.

** Emacs Packages
[[https://www.gnu.org/software/emacs/manual/][GNU Emacs Manuals Online - GNU Project - Free Software Foundation]]
*** Tramp

**** Docker
=C-x C-f= (the helm find files) then type /docker:sha-running-container:/workspaces/...

*** Maggit
Hands down the only git client comparable to =lazygit=.

**** Forge
Allows for the interface between Emacs and GitHub/GitLab code repositories. Must be setup according to the documenation [[https://magit.vc/manual/forge/][Top (Forge User and Developer Manual)]].
To use =Forge= inside a repository through =maggit= you must run ~forge-add-repository~


*** Evil surround
**** Basic usage
- Move the cursor to the word you want to surround.
- Press ys (for "yank surround") followed by a motion command to select the word. For a single word, the motion command would be iw (inner word).
- Finally, type the character you want to surround the word with, such as " for double quotes or ' for single quotes.

**** Basic Motions
    w: Start of the next word.
    e: End of the next word.
    b: Start of the previous word.
    $: End of the line.
    ^: Start of the line (first non-blank character).
    0: Very start of the line (including whitespace).

**** Text Objects

- Note taken on [2024-08-27 Tue 20:51] \\
  hahhahalloo
Text objects refer to predefined or user-defined regions of text. They are particularly useful with commands like ys for surrounding operations.

    iw: Inner word. The word under the cursor, not including surrounding whitespace.
    aw: A word. The word under the cursor, including surrounding whitespace.
    is: Inner sentence.
    as: A sentence. The sentence under the cursor, including surrounding whitespace.
    ip: Inner paragraph.
    ap: A paragraph. The paragraph under the cursor, including surrounding whitespace.
    i': Inner single quotes. The content inside single quotes, excluding the quotes themselves.
    a': A single quote. The content inside single quotes, including the quotes.
    i": Inner double quotes. The content inside double quotes, excluding the quotes themselves.
    a": A double quote. The content inside double quotes, including the quotes.
    i( or ib: Inner parentheses. The content inside parentheses, excluding the parentheses themselves.
    a( or ab: A parentheses. The content inside parentheses, including the parentheses.
    i[ or iB: Inner square brackets. The content inside square brackets, excluding the brackets themselves.
    a[ or aB: A square brackets. The content inside square brackets, including the brackets.
    i{ or iB: Inner curly braces. The content inside curly braces, excluding the braces themselves.
    a{ or aB: A curly brace. The content inside curly braces, including the braces.
    it: Inner tag (HTML/XML). The content inside the tag, excluding the tag itself.
    at: A tag (HTML/XML). The content inside the tag, including the tag itself.
