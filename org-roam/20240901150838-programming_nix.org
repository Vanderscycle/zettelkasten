:PROPERTIES:
:ID:       0b8da363-eaf4-4c96-a8b4-2975ff99ea65
:END:
#+title: Programming - Nix
* Nix
** Flakes
*** Packages
**** sops-nix
Generate a key first
#+begin_src bash
  nix run nixpkgs#ssh-to-age -- -private-key -i ~/.ssh/private > ~/.config/sops/age/keys.txt
  nix shell nixpkgs#age -c age-keygen -y ~/.config/sops/age/keys.txt
#+end_src
** Configuration
*** Booloader
**** HELP I accidentally deleted the bootloader
Boot from a live usb then; check the drives
#+begin_src bash
    lsblk
#+end_src

Assuming you get the following
#+begin_example
    nvme0n1     259:2    0 931.5G  0 disk
  ├─nvme0n1p1 259:3    0   512M  0 part /boot
  └─nvme0n1p2 259:4    0   931G  0 part /nix/store
#+end_example

You will need to mount the drives, then enter nixos-enter
#+begin_src bash
  mkdir
  mount /dev/[root partition] /mnt # nvme0n1p1
  mount /dev/[boot partition] /mnt/boot # nvme0n1p2
  # enter as root
  sudo nixos-enter
  NIXOS_INSTALL_BOOTLOADER=1 /nix/var/nix/profiles/system/bin/switch-to-configuration boot
#+end_src
If successful you can reboot
***** REFERENCES: [[https://nixos.wiki/wiki/Bootloader#From_a_running_system][Bootloader - NixOS Wiki]]

*** Services
**** Systemd Timer
Cron job alternative using systemd timer

#+begin_src nix
{ config, lib, modulesPath, pkgs, specialArgs, options }: {
  systemd.services = {
    sync-images = {
      environment = {
        DARKTABLE_PATH = pkgs.darktable;
      };
      path = [
        pkgs.procps
        pkgs.rclone
        pkgs.sqlite
      ];
      script = builtins.readFile ./sync-images.bash;
      serviceConfig = { # empty is root
        User = config.users.users.default.name;
      };
      startAt = "daily";
    };
  };
  # Other stuff…
}
#+end_src
path defines the packages available on the $PATH. As far as I know only Bash is available by default. This avoids any kind of dependency on the rest of your system, so you can trivially do things like running a different version of Python.

#+begin_src bash
  sysz # fzf + systemctl
  journalcl -xeu <service-name>.<ype (e.g. service/timer)>
#+end_src
